{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FlightFilter } from '../flight-filter';\nlet FlightListComponent = class FlightListComponent {\n  get flightList() {\n    return this.flightService.flightList;\n  }\n  constructor(flightService) {\n    this.flightService = flightService;\n    this.filter = new FlightFilter();\n    this.feedback = {};\n  }\n  ngOnInit() {\n    this.search();\n  }\n  search() {\n    this.flightService.load(this.filter);\n  }\n  select(selected) {\n    this.selectedFlight = selected;\n  }\n  delete(flight) {\n    if (confirm('Are you sure?')) {\n      this.flightService.delete(flight).subscribe(() => {\n        this.feedback = {\n          type: 'success',\n          message: 'Delete was successful!'\n        };\n        setTimeout(() => {\n          this.search();\n        }, 1000);\n      }, err => {\n        this.feedback = {\n          type: 'warning',\n          message: 'Error deleting.'\n        };\n      });\n    }\n  }\n};\nFlightListComponent = __decorate([Component({\n  selector: 'app-flight',\n  templateUrl: 'flight-list.component.html'\n})], FlightListComponent);\nexport { FlightListComponent };","map":{"version":3,"names":["Component","FlightFilter","FlightListComponent","flightList","flightService","constructor","filter","feedback","ngOnInit","search","load","select","selected","selectedFlight","delete","flight","confirm","subscribe","type","message","setTimeout","err","__decorate","selector","templateUrl"],"sources":["/Users/barathvirupriya/Documents/GitHub/angular-crud/demo/src/app/flight/flight-list/flight-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FlightFilter } from '../flight-filter';\nimport { FlightService } from '../flight.service';\nimport { Family } from '../models';\n\n@Component({\n  selector: 'app-flight',\n  templateUrl: 'flight-list.component.html'\n})\nexport class FlightListComponent implements OnInit {\n\n  filter = new FlightFilter();\n  selectedFlight!: Family;\n  feedback: any = {};\n\n  get flightList(): Family[] {\n    return this.flightService.flightList;\n  }\n\n  constructor(private flightService: FlightService) {\n  }\n\n  ngOnInit() {\n    this.search();\n  }\n\n  search(): void {\n    this.flightService.load(this.filter);\n  }\n\n  select(selected: Family): void {\n    this.selectedFlight = selected;\n  }\n\n  delete(flight: Family): void {\n    if (confirm('Are you sure?')) {\n      this.flightService.delete(flight).subscribe(() => {\n          this.feedback = {type: 'success', message: 'Delete was successful!'};\n          setTimeout(() => {\n            this.search();\n          }, 1000);\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error deleting.'};\n        }\n      );\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,kBAAkB;AAQxC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAM9B,IAAIC,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACC,aAAa,CAACD,UAAU;EACtC;EAEAE,YAAoBD,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IARjC,KAAAE,MAAM,GAAG,IAAIL,YAAY,EAAE;IAE3B,KAAAM,QAAQ,GAAQ,EAAE;EAOlB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,EAAE;EACf;EAEAA,MAAMA,CAAA;IACJ,IAAI,CAACL,aAAa,CAACM,IAAI,CAAC,IAAI,CAACJ,MAAM,CAAC;EACtC;EAEAK,MAAMA,CAACC,QAAgB;IACrB,IAAI,CAACC,cAAc,GAAGD,QAAQ;EAChC;EAEAE,MAAMA,CAACC,MAAc;IACnB,IAAIC,OAAO,CAAC,eAAe,CAAC,EAAE;MAC5B,IAAI,CAACZ,aAAa,CAACU,MAAM,CAACC,MAAM,CAAC,CAACE,SAAS,CAAC,MAAK;QAC7C,IAAI,CAACV,QAAQ,GAAG;UAACW,IAAI,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAwB,CAAC;QACpEC,UAAU,CAAC,MAAK;UACd,IAAI,CAACX,MAAM,EAAE;QACf,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,EACDY,GAAG,IAAG;QACJ,IAAI,CAACd,QAAQ,GAAG;UAACW,IAAI,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAiB,CAAC;MAC/D,CAAC,CACF;;EAEL;CACD;AAvCYjB,mBAAmB,GAAAoB,UAAA,EAJ/BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE;CACd,CAAC,C,EACWtB,mBAAmB,CAuC/B;SAvCYA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}