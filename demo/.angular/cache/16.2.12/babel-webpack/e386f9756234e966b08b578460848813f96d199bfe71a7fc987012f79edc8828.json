{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class LoginPageComponent {\n  //constructor(private authenticationService: AuthenticationService) {}\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    this.loginForm.get('username').value;\n    this.loginForm.get('password').value;\n  }\n  static #_ = this.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"app-login-page\"]],\n    decls: 21,\n    vars: 0,\n    consts: [[1, \"card\"], [\"data-mdb-input-init\", \"\", 1, \"form-outline\", \"mb-4\"], [\"type\", \"email\", \"id\", \"form1Example1\", 1, \"form-control\"], [\"for\", \"form1Example1\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"form1Example2\", 1, \"form-control\"], [\"for\", \"form1Example2\", 1, \"form-label\"], [1, \"row\", \"mb-4\"], [1, \"col\", \"d-flex\", \"justify-content-center\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"form1Example3\", \"checked\", \"\", 1, \"form-check-input\"], [\"for\", \"form1Example3\", 1, \"form-check-label\"], [1, \"col\"], [\"href\", \"#!\"], [\"data-mdb-ripple-init\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\")(2, \"div\", 1);\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Email address\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 1);\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7)(12, \"div\", 8);\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementStart(14, \"label\", 10);\n        i0.ɵɵtext(15, \" Remember me \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 11)(17, \"a\", 12);\n        i0.ɵɵtext(18, \"Forgot password?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"button\", 13);\n        i0.ɵɵtext(20, \"Sign in\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\".authentication-card[_ngcontent-%COMP%] {\\n    width: 30%;\\n    margin: 0 auto;\\n}\\n\\n.authentication-card-container[_ngcontent-%COMP%] {\\n    min-height: 100vh;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLmF1dGhlbnRpY2F0aW9uLWNhcmQge1xuICAgIHdpZHRoOiAzMCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5hdXRoZW50aWNhdGlvbi1jYXJkLWNvbnRhaW5lciB7XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","LoginPageComponent","ngOnInit","loginForm","username","required","password","onSubmit","get","value","_","_2","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/barathvirupriya/Documents/GitHub/angular-crud/demo/src/app/login/login.component.ts","/Users/barathvirupriya/Documents/GitHub/angular-crud/demo/src/app/login/login.component.html"],"sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n@Component({\n    selector: 'app-login-page',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css'],\n  })\n  export class LoginPageComponent implements OnInit {\n    public loginForm!: FormGroup;\n  \n    //constructor(private authenticationService: AuthenticationService) {}\n  \n    ngOnInit() {\n      this.loginForm = new FormGroup({\n        username: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required),\n      });\n    }\n  \n    public onSubmit() {\n      \n    this.loginForm.get('username')!.value\n    this.loginForm!.get('password')!.value\n      \n    }\n  }","<div class=\"card\">\n<form>\n    <!-- Email input -->\n    <div data-mdb-input-init class=\"form-outline mb-4\">\n      <input type=\"email\" id=\"form1Example1\" class=\"form-control\" />\n      <label class=\"form-label\" for=\"form1Example1\">Email address</label>\n    </div>\n  \n    <!-- Password input -->\n    <div data-mdb-input-init class=\"form-outline mb-4\">\n      <input type=\"password\" id=\"form1Example2\" class=\"form-control\" />\n      <label class=\"form-label\" for=\"form1Example2\">Password</label>\n    </div>\n  \n    <!-- 2 column grid layout for inline styling -->\n    <div class=\"row mb-4\">\n      <div class=\"col d-flex justify-content-center\">\n        <!-- Checkbox -->\n        <div class=\"form-check\">\n          <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"form1Example3\" checked />\n          <label class=\"form-check-label\" for=\"form1Example3\"> Remember me </label>\n        </div>\n      </div>\n  \n      <div class=\"col\">\n        <!-- Simple link -->\n        <a href=\"#!\">Forgot password?</a>\n      </div>\n    </div>\n  \n    <!-- Submit button -->\n    <button data-mdb-ripple-init type=\"submit\" class=\"btn btn-primary btn-block\">Sign in</button>\n  </form>\n\n</div>"],"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;AAQjE,OAAM,MAAOC,kBAAkB;EAG7B;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAIL,SAAS,CAAC;MAC7BM,QAAQ,EAAE,IAAIL,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACK,QAAQ,CAAC;MAClDC,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACK,QAAQ;KAClD,CAAC;EACJ;EAEOE,QAAQA,CAAA;IAEf,IAAI,CAACJ,SAAS,CAACK,GAAG,CAAC,UAAU,CAAE,CAACC,KAAK;IACrC,IAAI,CAACN,SAAU,CAACK,GAAG,CAAC,UAAU,CAAE,CAACC,KAAK;EAEtC;EAAC,QAAAC,CAAA,G;qBAjBUT,kBAAkB;EAAA;EAAA,QAAAU,EAAA,G;UAAlBV,kBAAkB;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVjCE,EAAA,CAAAC,cAAA,aAAkB;QAIZD,EAAA,CAAAE,SAAA,eAA8D;QAC9DF,EAAA,CAAAC,cAAA,eAA8C;QAAAD,EAAA,CAAAG,MAAA,oBAAa;QAAAH,EAAA,CAAAI,YAAA,EAAQ;QAIrEJ,EAAA,CAAAC,cAAA,aAAmD;QACjDD,EAAA,CAAAE,SAAA,eAAiE;QACjEF,EAAA,CAAAC,cAAA,eAA8C;QAAAD,EAAA,CAAAG,MAAA,eAAQ;QAAAH,EAAA,CAAAI,YAAA,EAAQ;QAIhEJ,EAAA,CAAAC,cAAA,cAAsB;QAIhBD,EAAA,CAAAE,SAAA,gBAAsF;QACtFF,EAAA,CAAAC,cAAA,iBAAoD;QAACD,EAAA,CAAAG,MAAA,qBAAY;QAAAH,EAAA,CAAAI,YAAA,EAAQ;QAI7EJ,EAAA,CAAAC,cAAA,eAAiB;QAEFD,EAAA,CAAAG,MAAA,wBAAgB;QAAAH,EAAA,CAAAI,YAAA,EAAI;QAKrCJ,EAAA,CAAAC,cAAA,kBAA6E;QAAAD,EAAA,CAAAG,MAAA,eAAO;QAAAH,EAAA,CAAAI,YAAA,EAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}